% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr-verbs.R
\name{mutate-phyloseq}
\alias{mutate-phyloseq}
\alias{mutate_tax_table}
\alias{mutate_tax_table,taxonomyTable-method}
\alias{mutate_tax_table,phyloseq-method}
\alias{transmute_tax_table}
\alias{transmute_tax_table,taxonomyTable-method}
\alias{transmute_tax_table,phyloseq-method}
\alias{mutate_sample_data}
\alias{mutate_sample_data,sample_data-method}
\alias{mutate_sample_data,phyloseq-method}
\alias{transmute_sample_data}
\alias{transmute_sample_data,sample_data-method}
\alias{transmute_sample_data,phyloseq-method}
\title{Create, modify, and delete columns in the taxonomy table or sample data}
\usage{
mutate_tax_table(x, ...)

\S4method{mutate_tax_table}{taxonomyTable}(x, ...)

\S4method{mutate_tax_table}{phyloseq}(x, ...)

transmute_tax_table(x, ...)

\S4method{transmute_tax_table}{taxonomyTable}(x, ...)

\S4method{transmute_tax_table}{phyloseq}(x, ...)

mutate_sample_data(x, ...)

\S4method{mutate_sample_data}{sample_data}(x, ...)

\S4method{mutate_sample_data}{phyloseq}(x, ...)

transmute_sample_data(x, ...)

\S4method{transmute_sample_data}{sample_data}(x, ...)

\S4method{transmute_sample_data}{phyloseq}(x, ...)
}
\arguments{
\item{x}{A \code{phyloseq}, \code{taxonomyTable}, or \code{sample_data} object}

\item{...}{Expressions passed to \code{dplyr::mutate()} or \code{dplyr::transmute()}}
}
\description{
These functions are wrappers around \code{dplyr::mutate()} and
\code{dplyr::transmute()} that provide convenient ways to modify \code{tax_table(x)}
and \code{sample_data(x)} as well as the sample and taxa names.
}
\details{
When modifying the taxonomy table, the \code{.otu} column name can be used to set
new taxa names.
When modifying the sample data, the \code{.sample} column name can be used to set
new taxa names.

The experimental arguments to \code{dplyr::mutate()} of \code{.keep}, \code{.before}, and
\code{.after} are not currently supported and may result in errors or unexpected
behavior.
}
\examples{
data(GlobalPatterns)

ps <- GlobalPatterns \%>\%
  transmute_sample_data(SampleType, sample_sum = sample_sums(.)) \%>\%
  filter_sample_data(SampleType \%in\% c("Feces", "Skin", "Tongue")) \%>\%
  filter_tax_table(Kingdom == "Bacteria") \%>\%
  tax_glom("Phylum") \%>\%
  transmute_tax_table(Kingdom, Phylum, .otu = Phylum)
sample_data(ps)
tax_table(ps)
}
