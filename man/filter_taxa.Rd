% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform-filter.R
\name{filter_taxa}
\alias{filter_taxa}
\alias{filter_taxa2}
\title{Filter taxa based on across-sample OTU abundance criteria}
\usage{
filter_taxa(physeq, fun, prune = FALSE)

filter_taxa2(physeq, fun)
}
\arguments{
\item{physeq}{\code{\link[=phyloseq-class]{phyloseq-class()}} or \code{\link[ape:read.tree]{ape::phylo()}}.}

\item{fun}{A function or formula that can be converted to a function by
\code{\link[purrr:as_mapper]{purrr::as_mapper()}}}

\item{prune}{A logical. If \code{FALSE}, then this function returns a logical
vector specifying the taxa that passed the filter; if \code{TRUE}, then this
function returns the pruned phyloseq object.}
}
\description{
Variations of \code{\link[phyloseq:filter_taxa]{phyloseq::filter_taxa()}} that allows a purrr-style anonymous
function.
}
\details{
\code{filter_taxa()} simply calls \code{\link[purrr:as_mapper]{purrr::as_mapper()}} on \code{fun} and passes the
resulting function on to \code{\link[phyloseq:filter_taxa]{phyloseq::filter_taxa()}}. \code{filter_taxa2()} also
sets \code{prune = TRUE}, which is convenient when passing a phyloseq object in a
pipe chain (see example).
}
\section{Functions}{
\itemize{
\item \code{filter_taxa2()}: Sets \code{prune = TRUE}

}}
\examples{
data(GlobalPatterns)
# Filter low prevalence taxa and then convert to proportions
gp.prop <- GlobalPatterns \%>\%
  filter_taxa2(~ sum(. > 0) > 5) \%>\%
  transform_sample_counts(~ . / sum(.))
}
\seealso{
\code{\link[phyloseq:filter_taxa]{phyloseq::filter_taxa()}}
\code{\link[purrr:as_mapper]{purrr::as_mapper()}}
}
